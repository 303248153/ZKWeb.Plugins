$.fn.productPropertyValuesEditor=function(){var a=$(this);if(!a.data("initialized")){a.data("initialized",!0);var t=a.data("property-values-name"),e=a.data("table-class"),n=a.data("data-table-header-class"),d=a.closest("form").find("[name='"+t+"']");if(d.length<=0)return void console.warn("init product property values editor failed",d);var i=$.translate("Name"),r=$.translate("Remark"),l=a.editableTable({tableClass:e,tableHeaderClass:n,columns:[i,r]}),o=l.find("tbody"),p="addRow.editableTable";l.on(p,function(a,t){var e=$("<tr>");_.each([["name",i],["remark",r]],function(a){e.append($("<td>").addClass(a[0]).append($("<input>").addClass("form-control").attr("type","text").attr("placeholder",a[1])))}),e.append(l.data("actionsCell").clone()),e.data("property-value-id",t.Id),e.find(".name input").val(t.Name),e.find(".remark input").val(t.Remark),o.append(e)});var c="bind.editableTable",u="collect.editableTable",s="bindLock.editableTable";l.on(c,function(){a.data(s,!0),o.empty();var t=JSON.parse(d.val()||"[]")||[];_.each(t,function(a){l.trigger(p,a)}),a.data(s,!1)}),l.on(u,function(){if(!a.data(s)){var t=[],e=o.find("> tr");e.each(function(){var a=$(this);t.push({Id:a.data("property-value-id")||null,Name:a.find(".name input").val(),Remark:a.find(".remark input").val()})}),d.val(JSON.stringify(t))}}),l.trigger(c)}},$(function(){var a=function(a){a.each(function(){$(this).productPropertyValuesEditor()})},t="[data-toggle='product-property-values-editor']";a($(t)),$(document).on("dynamicLoaded",function(e,n){a($(n).find(t))})});